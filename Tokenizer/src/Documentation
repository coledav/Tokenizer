Documentation file:

My project is split into two classes; Tokenizer and TokenReader

TokenReader contains a main method which takes a filename as a command line argument.
It then opens the file and creates a Tokenizer object which can access the text from the file
as a series of Core tokens.

Tokenizer stores all of the tokens that are contained in the file that was given to it. The Tokenizer reads one character
at a time, and when a distinguishing character is read, the program is taken to a method that
determines if the current token being read is valid. If it is, the token is put into a Queue.
In order to store the values of IDs and integers, there are two additional queues. Tokenizer has four methods;
getToken(), skipToken(), intVal(), and idName(). 

getToken() returns the current token.

skipToken() skips to the next token

intVal() -- if the current token is an integer, intVal() returns the value of that integer

idName() -- if the current token is an ID, idName() returns the value of that ID